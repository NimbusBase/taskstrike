// Generated by CoffeeScript 1.6.2
(function() {
  window.render_user_square = function(p) {
    var a, button_string, color_string, pic, render_string;

    if (p.pic != null) {
      pic = p.pic;
    } else {
      pic = "images/default-person.gif";
    }
    color_string = {
      '7bd148': "",
      '5484ed': "",
      'a4bdfc': "",
      '46d6db': "",
      '7ae7bf': "",
      '51b749': "",
      'fbd75b': "",
      'ffb878': "",
      'dc2127': "",
      'dbadff': "",
      'e1e1e1': ""
    };
    a = User.find(p.id);
    color_string[a.color] = "selected";
    if ((window.logged_in_user != null) && window.logged_in_user.id === p.id) {
      button_string = "<button class='small_blue_button' style='background: #1AB58A; border: 0px;'><text rel='label_delete_task'>You</text></button>";
    } else {
      button_string = "<button class='small_blue_button' onclick='window.remove_user(\"" + p.id + "\")'><text rel='label_delete_task'>Remove User</text></button>";
    }
    render_string = "<li class='useritem' id='" + p.id + "'>\n<img src='" + pic + "' /><span>" + p.name + "</span>\n<select name=\"colorpicker-picker\" id=\"" + p.id + "\">\n  <option value=\"#7bd148\" " + color_string['7bd148'] + ">Green</option>\n  <option value=\"#5484ed\" " + color_string['5484ed'] + ">Bold blue</option>\n  <option value=\"#a4bdfc\" " + color_string['a4bdfc'] + ">Blue</option>\n  <option value=\"#46d6db\" " + color_string['46d6db'] + ">Turquoise</option>\n  <option value=\"#7ae7bf\" " + color_string['7ae7bf'] + ">Light green</option>\n  <option value=\"#51b749\" " + color_string['51b749'] + ">Bold green</option>\n  <option value=\"#fbd75b\" " + color_string['fbd75b'] + ">Yellow</option>\n  <option value=\"#ffb878\" " + color_string['ffb878'] + ">Orange</option>\n  <option value=\"#ff887c\" " + color_string['ff887c'] + ">Red</option>\n  <option value=\"#dc2127\" " + color_string['dc2127'] + ">Bold red</option>\n  <option value=\"#dbadff\" " + color_string['dbadff'] + ">Purple</option>\n  <option value=\"#e1e1e1\" " + color_string['e1e1e1'] + ">Gray</option>\n</select>\n" + button_string + "\n</li>";
    $(".userlist").append(render_string);
    return $('select[name="colorpicker-picker"]').simplecolorpicker({
      picker: true
    }).on('change', function() {
      var color, id;

      log(this);
      color = $(this).val().replace("#", "");
      log(color);
      id = this.id;
      log(id);
      a = User.find(id);
      a.color = color;
      return a.save();
    });
  };

  window.render_user = function(callback) {
    log("render user");
    if (Nimbus.Auth.service === "GDrive") {
      return Nimbus.Share.get_users(function(permissions) {
        var a, p, _i, _len;

        log("return called");
        $(".userlist").html("");
        for (_i = 0, _len = permissions.length; _i < _len; _i++) {
          p = permissions[_i];
          log("p", p);
          if (!User.exists(p.id)) {
            a = User.init(p);
            a.color = "e1e1e1";
            a.save();
          }
          window.render_user_square(p);
        }
        if (callback != null) {
          return callback();
        }
      });
    }
  };

  window.render_current_user = function(callback) {
    log("current user");
    if (Nimbus.Auth.service === "GDrive") {
      return Nimbus.Share.get_me(function(me) {
        log("return get me called");
        window.logged_in_user = me;
        if (me.pic != null) {
          $("#logged_in_image").attr("src", me.pic);
        }
        if (callback != null) {
          return callback();
        }
      });
    }
  };

  window.add_user = function() {
    var email;

    email = $("#shareinput").val();
    if (email === "") {
      create("sticky", {
        "title": "Failed",
        "text": "Email empty"
      });
      return;
    }
    log("add user", email);
    $("#shareinput").val("");
    if (Nimbus.Auth.service === "GDrive") {
      create("sticky", {
        "title": "Adding user",
        "text": "Adding " + email
      });
      return Nimbus.Share.add_user(email, function(p) {
        var a;

        log("p", p);
        a = User.init(p);
        a.color = "e1e1e1";
        a.save();
        $('select[name="colorpicker-picker"]').simplecolorpicker({
          picker: true
        }).on('change', function() {
          var color, id;

          log(this);
          color = $(this).val().replace("#", "");
          log(color);
          id = this.id;
          log(id);
          a = User.find(id);
          a.color = color;
          return a.save();
        });
        return window.render_user_square(p);
      });
    }
  };

  window.remove_user = function(id) {
    log("remove user", id);
    if (Nimbus.Auth.service === "GDrive") {
      create("sticky", {
        "title": "Removing a user",
        "text": "In the process of removal"
      });
      return Nimbus.Share.remove_user(id, function() {
        var a;

        log("deleted user callback");
        $("#" + id).remove();
        a = User.find(id);
        a.destroy();
        return create("sticky", {
          "title": "Success",
          "text": "User removed"
        });
      });
    }
  };

  window.get_user = function(item) {
    if (User.exists(item.data.userid)) {
      return User.find(item.data.userid);
    }
  };

  window.get_space = function() {
    log("get spaces");
    if (Nimbus.Auth.service === "GDrive") {
      return Nimbus.Share.get_spaces(function(data) {
        var button_string, d, string, _i, _len, _results;

        $(".projectlist").html("");
        _results = [];
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          d = data[_i];
          if (window.folder[Nimbus.Auth.app_name].id === d.id) {
            button_string = "<button class=\"small_blue_button forty\" onclick=\"switch_workspace(\'" + d.id + "\')\" style=\"background: #1AB58A; border: 0px;\"><text rel=\"label_delete_task\">Current Workspace</text></button>";
          } else {
            button_string = "<button class=\"small_blue_button forty\" onclick=\"switch_workspace(\'" + d.id + "\')\"><text rel=\"label_delete_task\">Switch to Workspace</text></button>";
          }
          string = "<li class=\"useritem\">\n<img src=\"images/default-person.gif\" />\n<span>" + d.owner + "'s workspace</span>\n" + button_string + "\n</li>";
          _results.push($(".projectlist").append(string));
        }
        return _results;
      });
    }
  };

}).call(this);
