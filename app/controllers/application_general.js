// Generated by CoffeeScript 1.6.2
(function() {
  var setting_url, waitForFinalEvent;

  setting_url = "";

  window.last_opened = "";

  window.cur = 0;

  window.taskdict = {};

  window.obj = null;

  window.all_syncing = false;

  window.render_after_sync = function() {
    var tasklist, _i, _len, _ref, _results;

    _ref = List.all();
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      tasklist = _ref[_i];
      window.assign_order(Task.list(tasklist.id).sort(Task.ordersort));
      if ($("#" + tasklist.id).length > 0) {
        window.currently_syncing = true;
        List.find(tasklist.id).save();
        _results.push(window.currently_syncing = false);
      } else {
        _results.push(window.App.render_new(List.find(tasklist.id)));
      }
    }
    return _results;
  };

  window.sync_everything = function() {
    create("sticky", {
      "title": "Syncing",
      "text": "Pulling down data from the cloud"
    });
    return List.sync_all(function() {
      return User.sync_all(function() {
        return Task.sync_all(function() {
          var a, new_task;

          if (List.all().length === 0 && Task.all().length === 0) {
            a = List.create({
              "name": "Your first list"
            });
            new_task = Task.create({
              name: "Double click to edit a task",
              listid: a.id,
              done: false
            });
            new_task = Task.create({
              name: "Click on the button at the bottom and add the new task in the input, hit return to save",
              listid: a.id,
              done: false
            });
            new_task = Task.create({
              name: "Select a task and press tab to create a subtask",
              listid: a.id,
              done: false
            });
            new_task = Task.create({
              name: "Go to the setting menu to share this with your friends, only works with Google Drive",
              listid: a.id,
              done: false
            });
          }
          window.render_after_sync();
          window.render_current_user(window.render_user);
          window.get_space();
          window.create("sticky", {
            "title": "Syncing",
            "text": "Sync complete!"
          });
          return window.reset = true;
        });
      });
    });
  };

  window.switch_workspace = function(id) {
    create("sticky", {
      "title": "Switching workspace",
      "text": "In progress"
    });
    return Nimbus.Client.GDrive.switch_to_app_folder(id, function() {
      $("#listsoftasks").html("");
      $(".listfilter").html("");
      $(".listfilter").append('<span class="divider"></span>');
      $(".listfilter").append('<button class="filterselected" onclick="show_all_div()" id="allbutton">all</button>');
      create("sticky", {
        "title": "Switching workspace",
        "text": "Done"
      });
      return window.sync_everything();
    });
  };

  window.big_bang = function() {
    console.log("### BIG BANG CALLED");
    return jQuery(function($) {
      $("#listsoftasks").html("");
      $("#newtaskdate").datepicker({
        constrainInput: true,
        buttonImage: "famfamicons/calendar.png",
        buttonImageOnly: true,
        buttonText: "",
        showOn: "both",
        onSelect: function(dateText, inst) {
          if ($(this).parent().parent().find(".showdate").length === 1) {
            return $(this).parent().parent().find(".showdate").html(dateText);
          }
        }
      });
      window.container = $("#container").notify();
      updateItems();
      shortcut.add("up", prevItem, {
        disable_in_input: "true"
      });
      shortcut.add("down", nextItem, {
        disable_in_input: "true"
      });
      shortcut.add("tab", make_child, {
        disable_in_input: "true"
      });
      shortcut.add("shift+tab", untab, {
        disable_in_input: "true"
      });
      shortcut.add("enter", open_for_edit);
      shortcut.add("backspace", pressed_delete, {
        disable_in_input: "true"
      });
      shortcut.add("delete", pressed_delete, {
        disable_in_input: "true"
      });
      window.App = allLists.init();
      $(".app_tab:not(#views)").hide();
      $("#dialog_task_startdate").datepicker({
        beforeShow: function() {
          return $('#ui-datepicker-div').css('z-index', 2005);
        },
        constrainInput: true
      });
      $("#dialog_task_enddate").datepicker({
        constrainInput: true
      });
      List.sync_all(function() {
        return User.sync_all(function() {
          return Task.sync_all(function() {
            var a, new_task;

            if (List.all().length === 0 && Task.all().length === 0) {
              a = List.create({
                "name": "Your first list"
              });
              new_task = Task.create({
                name: "Double click to edit a task",
                listid: a.id,
                done: false
              });
              new_task = Task.create({
                name: "Click on the button at the bottom and add the new task in the input, hit return to save",
                listid: a.id,
                done: false
              });
              new_task = Task.create({
                name: "Select a task and press tab to create a subtask",
                listid: a.id,
                done: false
              });
              new_task = Task.create({
                name: "Go to the setting menu to share this with your friends, only works with Google Drive",
                listid: a.id,
                done: false
              });
            }
            window.render_after_sync();
            window.render_current_user(window.render_user);
            return window.get_space();
          });
        });
      });
      return setTimeout("$('#loading').fadeOut()", 3000);
    });
  };

  $(document).ready(function() {
    return $("body").layout({
      applyDefaultStyles: false,
      south: {
        resizable: false,
        spacing_open: 0
      },
      west: {
        resizable: false,
        spacing_open: 0
      }
    });
  });

  Nimbus.Auth.set_app_ready(big_bang);

  window.create = function(template, vars, opts) {
    return window.container.notify("create", template, vars, opts);
  };

  window.addlist_window = function() {
    $("#list_name").val("");
    $("#list_description").val("");
    return $("#dialog_addlist").dialog({
      modal: true,
      title: "Add A New List",
      dialogClass: "adding",
      buttons: {
        'Add List': function() {
          add_list();
          return $(this).dialog("close");
        }
      }
    });
  };

  window.add_list = function() {
    var description, name, newlist;

    name = $("#list_name").val();
    description = $("#list_description").val();
    newlist = List.create({
      name: name,
      description: description
    });
    /*
    newlist = List.init(
      name: name
      description: description
      time: moment().toString()
      synced: true
    )
    newlist.save()
    */

    window.App.render_new(newlist);
    return $("#dialog_addlist").dialog("close");
  };

  window.edit_list = function() {
    var curr_list;

    curr_list = List.find($("#dialog_addlist").data("id"));
    curr_list.name = $("#list_name").val();
    curr_list.description = $("#list_description").val();
    curr_list.time = moment().toString();
    curr_list.save();
    return $("#dialog_addlist").dialog("close");
  };

  window.edit_task = function() {
    return $("#dialog_task").dialog({
      modal: true,
      title: "Edit Task",
      dialogClass: "adding",
      buttons: {
        'Save Task': function() {
          alert("save task called");
          return $(this).dialog("close");
        }
      }
    });
  };

  window.toggle = function(tabSelector, elementSelector, activeElement, activeTab) {
    var list, _i, _len, _ref, _results;

    $(tabSelector).not(activeTab).removeClass("selected");
    $(activeTab).addClass("selected");
    $(elementSelector).not(activeElement).hide();
    $(activeElement).show();
    $("#sidebar_dark").attr("class", activeElement.replace("#", ""));
    if (activeElement === '#calendarview') {
      $("#calendar").fullCalendar("refetchEvents");
      $("#calendar").fullCalendar("windowResize");
    }
    if (window.reset && activeElement === "#views") {
      window.reset = false;
      _ref = List.all();
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        list = _ref[_i];
        _results.push(list.save());
      }
      return _results;
    }
  };

  window.show_all_div = function() {
    $(".listdiv").show();
    $(".filterselected").removeClass("filterselected");
    return $("#allbutton").addClass("filterselected");
  };

  window.hide_based_on_user = function() {
    if ($("#dialog_task_user_id").val() === "") {
      return $("#dialog_task_status_row").hide();
    } else {
      return $("#dialog_task_status_row").show();
    }
  };

  waitForFinalEvent = (function() {
    var timers;

    timers = {};
    return function(callback, ms, uniqueId) {
      if (!uniqueId) {
        uniqueId = "Don't call this twice without a uniqueId";
      }
      if (timers[uniqueId]) {
        clearTimeout(timers[uniqueId]);
      }
      return timers[uniqueId] = setTimeout(callback, ms);
    };
  })();

  window.open_help = function() {
    if ($("#sidebar_dark").hasClass("views") || $("#views_tab").hasClass("selected")) {
      return $("#dialog_help").dialog({
        modal: true,
        title: 'Task View'
      });
    } else if ($("#sidebar_dark").hasClass("gantt_view")) {
      return $("#dialog_help_gantt").dialog({
        modal: true,
        title: 'Gantt View'
      });
    } else if ($("#sidebar_dark").hasClass("people_view")) {
      return $("#dialog_help_people").dialog({
        modal: true,
        title: 'People View'
      });
    } else {
      return log("no help availible");
    }
  };

  window.loading = function() {
    log("ANIMATION Called");
    if (!Nimbus.Auth.authorized()) {
      $("#progress").hide();
      $("#login_buttons").fadeIn();
      return $("#logo_text").fadeIn();
    }
  };

  window.setTimeout("window.loading()", 3000);

  window.logout = function() {
    Nimbus.Auth.logout();
    $("#loading").show();
    $("#progress").hide();
    $("#login_buttons").fadeIn();
    return $("#logo_text").fadeIn();
  };

  window.screencast = function() {
    return $("#dialog_screencast").dialog({
      modal: true,
      title: "Screencast",
      width: "666",
      zIndex: 10010
    });
  };

}).call(this);
