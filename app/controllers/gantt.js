// Generated by CoffeeScript 1.6.2
(function() {
  window.gantt_callback = function(data) {
    var current;

    log("gantt data: ", data);
    current = Task.find_by_content(data.name)[0];
    current.start_date = moment(data.start).format("M/D/YY");
    current.end_date = moment(data.end).format("M/D/YY");
    return current.save();
  };

  window.create_gantt_data = function() {
    var all_tasks, counter, d, e, gantt_data, series, task, u, user, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;

    counter = 1;
    gantt_data = [];
    _ref = User.all();
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      user = _ref[_i];
      all_tasks = Task.find_by_user(user.id);
      if (all_tasks.length > 0) {
        d = {
          id: counter,
          name: user.name
        };
        series = [];
        for (_j = 0, _len1 = all_tasks.length; _j < _len1; _j++) {
          task = all_tasks[_j];
          e = {
            name: task.name,
            start: (task.start_date != null) && !isNaN(new Date(task.start_date)) ? new Date(task.start_date) : new Date(),
            end: (task.end_date != null) && !isNaN(new Date(task.end_date)) ? new Date(task.end_date) : new Date()
          };
          series.push(e);
        }
        d["series"] = series;
        gantt_data.push(d);
        counter = counter + 1;
      }
    }
    window.gantt_data = gantt_data;
    u = {
      id: counter,
      name: 'Unassigned'
    };
    series = [];
    _ref1 = Task.all();
    for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
      task = _ref1[_k];
      if ((task.userid == null) || task.userid === "") {
        e = {
          name: task.name,
          start: (task.start_date != null) && !isNaN(new Date(task.start_date)) ? new Date(task.start_date) : new Date(),
          end: (task.end_date != null) && !isNaN(new Date(task.end_date)) ? new Date(task.end_date) : new Date()
        };
        series.push(e);
      }
    }
    u["series"] = series;
    gantt_data.push(u);
    return gantt_data;
  };

  window.create_gantt_data_by_list = function() {
    var e, gantt_data, list, series, task, tasks, u, _i, _j, _len, _len1, _ref;

    gantt_data = [];
    _ref = List.all();
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      list = _ref[_i];
      tasks = Task.list(list.id).sort(Task.ordersort);
      u = {
        id: list.id,
        name: list.name
      };
      series = [];
      for (_j = 0, _len1 = tasks.length; _j < _len1; _j++) {
        task = tasks[_j];
        e = {
          name: task.name,
          start: (task.start_date != null) && !isNaN(new Date(task.start_date)) ? new Date(task.start_date) : new Date(),
          end: (task.end_date != null) && !isNaN(new Date(task.end_date)) ? new Date(task.end_date) : new Date(),
          id: task.id
        };
        if ((task.userid != null) && User.exists(task.userid)) {
          e.color = User.find(task.userid).color;
        }
        series.push(e);
      }
      u["series"] = series;
      gantt_data.push(u);
    }
    return gantt_data;
  };

  window.gantt_click = function(data) {
    var task_controller;

    log(data);
    task_controller = window.taskdict[data.id];
    return task_controller.edit();
  };

  window.initialize_gantt = function() {
    var gantt_data, slideWidth;

    slideWidth = $("#gantt_view").outerWidth() - 240 - 31;
    $("#gantt_chart").html("");
    gantt_data = create_gantt_data_by_list();
    return $("#gantt_chart").ganttView("rerender", {
      data: gantt_data,
      slideWidth: slideWidth,
      behavior: {
        onClick: gantt_click,
        onDrag: gantt_callback,
        onResize: gantt_callback
      }
    });
  };

}).call(this);
